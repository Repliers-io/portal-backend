{
   "name": "portal-backend",
   "version": "1.0.0",
   "description": "Repliers Portal backend",
   "main": "index.js",
   "license": "ISC",
   "author": "",
   "type": "module",
   "engines": {
      "node": "^20.19.1"
   },
   "nodemonConfig": {
      "watch": [
         "src",
         ".env"
      ],
      "ext": "ts,json",
      "ignore": [
         "src/**/*.spec.ts"
      ]
   },
   "mocha": {
      "extension": [
         "ts"
      ],
      "package": "./package.json",
      "reporter": "spec",
      "slow": "75",
      "timeout": "2000",
      "recursive": true,
      "watch-files": [
         "test/**/*.ts"
      ]
   },
   "dependencies": {
      "@koa/cors": "^5.0.0",
      "@koa/router": "^13.1.0",
      "@logtail/pino": "^0.5.4",
      "@nats-io/jetstream": "^3.0.2",
      "@nats-io/transport-node": "^3.0.2",
      "@ngrok/ngrok": "^1.5.1",
      "addresser": "github:Repliers-io/addresser",
      "axios": "^1.9.0",
      "cloud-pine": "^2.0.1",
      "dayjs": "^1.11.13",
      "debug": "^4.4.1",
      "dotenv": "^16.5.0",
      "helmet": "^8.1.0",
      "jaro-winkler": "^0.2.8",
      "joi": "^17.13.3",
      "jsonwebtoken": "^9.0.2",
      "keyv": "^5.3.3",
      "knex": "^3.1.0",
      "koa": "^2.16.1",
      "koa-body": "^6.0.1",
      "koa-compose": "^4.1.0",
      "koa-compress": "^5.1.1",
      "koa-helmet": "^8.0.1",
      "koa-jwt": "^4.0.4",
      "koa-pino-logger": "^4.0.0",
      "koa-sslify": "^5.0.1",
      "koa2-swagger-ui": "^5.11.0",
      "ms": "^2.1.3",
      "nodemailer": "^7.0.3",
      "openid-client": "^5.7.1",
      "p-retry": "^6.2.1",
      "p-throttle": "^7.0.0",
      "pg": "^8.16.0",
      "pino": "^9.6.0",
      "pino-pretty": "^13.0.0",
      "reflect-metadata": "^0.2.2",
      "swagger-jsdoc": "^6.2.8",
      "tsyringe": "^4.10.0",
      "xss": "^1.0.15"
   },
   "devDependencies": {
      "@swc/core": "^1.11.24",
      "@tsconfig/node20": "^20.1.5",
      "@tsconfig/strictest": "^2.0.5",
      "@types/debug": "^4.1.12",
      "@types/jaro-winkler": "^0.2.4",
      "@types/jsonwebtoken": "^9.0.9",
      "@types/koa": "^2.15.0",
      "@types/koa__cors": "^5.0.0",
      "@types/koa__router": "^12.0.4",
      "@types/koa-compress": "^4.0.6",
      "@types/koa-pino-logger": "^3.0.4",
      "@types/koa-sslify": "^4.0.6",
      "@types/lodash": "^4.17.16",
      "@types/mocha": "^10.0.10",
      "@types/node": "^20.17.47",
      "@types/nodemailer": "^6.4.17",
      "@types/supertest": "^6.0.3",
      "@types/swagger-jsdoc": "^6.0.4",
      "@typescript-eslint/eslint-plugin": "^8.32.1",
      "@typescript-eslint/parser": "^8.32.1",
      "c8": "^10.1.3",
      "concurrently": "^9.1.2",
      "cross-env": "^7.0.3",
      "eslint": "^9.27.0",
      "lodash": "^4.17.21",
      "mocha": "^11.3.0",
      "mocha-junit-reporter": "^2.2.1",
      "nock": "^14.0.4",
      "nodemon": "^3.1.10",
      "rimraf": "^6.0.1",
      "supertest": "^7.1.1",
      "ts-node": "^11.0.0-beta.1",
      "typescript": "^5.8.3"
   },
   "scripts": {
      "test": "cross-env NODE_ENV=testing DOT_ENV_CONFIG=test.env mocha --require ./src/ts-loader.js --require ./test/hooks.ts --extension ts --timeout 10000",
      "test:coverage": "c8 --reporter=text npm run test",
      "test:coverage:html": "c8 --reporter=html npm run test",
      "test:ci": "npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=./test-results/test-result.xml",
      "test:localhost": "cross-env DB_PORT=5555 npm run test",
      "build": "npm run clean && tsc",
      "start": "node dist/index.js",
      "dev": "concurrently \"npm run dev:server\" \"npm run dev:worker\"",
      "dev:server": "npm run clean && cross-env NODE_ENV=development nodemon --watch ${DOT_ENV_CONFIG:-.env} --watch src -x node --import ./src/ts-loader.js -- src/index.ts",
      "dev:worker": "cross-env NODE_ENV=development nodemon --watch ${DOT_ENV_CONFIG:-.env} --watch src -x node --import ./src/ts-loader.js -- src/worker.ts",
      "debug": "cross-env DEBUG=repliers:* NODE_OPTIONS=--inspect npm run dev",
      "clean": "rimraf dist",
      "check-dot-env": "[[ ! -z \"$DOT_ENV_CONFIG\" ]] || DOT_ENV_CONFIG=.env; echo \"Using $DOT_ENV_CONFIG\"",
      "knex": "cross-env NODE_OPTIONS='--import ./src/ts-loader.js' knex --knexfile ./src/knexfile.ts",
      "knex:prod": "knex --knexfile ./dist/knexfile.js",
      "db:migrate:prod": "[ \"$APP_DISABLE_PERSISTENCE\" = \"true\" ] && echo \"Skipping migration\" && exit 0; [ -z \"$APP_DISABLE_PERSISTENCE\" ] || [ \"$APP_DISABLE_PERSISTENCE\" = \"false\" ] && npm run db:jsts_check && npm run knex:prod migrate:latest",
      "db:migrate": "npm run knex migrate:latest",
      "db:migrate:test": "cross-env DB_PORT=5555 DOT_ENV_CONFIG=test.env npm run knex migrate:latest",
      "jwt:generate": "echo 'generating keys' && mkdir keys && openssl genrsa -out keys/private.pem 2048 && openssl rsa -in keys/private.pem -pubout -out keys/public.pem"
   }
}
